version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      - CONFIG_PATH=/app/configs/${CONFIG_FILE:-postgres.yaml}
      - STORAGE_TYPE=${STORAGE_TYPE:-postgres}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "8080:8080"
    command: >
      sh -c "
      if [ \"$$STORAGE_TYPE\" = 'postgres' ]; then
        echo 'Waiting for PostgreSQL...';
        /app/wait-for-postgres.sh $$POSTGRES_HOST $$POSTGRES_PORT;
      fi;
      ./comments-system
      "

  migrator:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      - CONFIG_PATH=/app/configs/${CONFIG_FILE:-postgres.yaml}
      - STORAGE_TYPE=${STORAGE_TYPE:-postgres}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: >
      sh -c "
      if [ \"$$STORAGE_TYPE\" = 'postgres' ]; then
        echo 'Running migrations...';
        /app/wait-for-postgres.sh $$POSTGRES_HOST $$POSTGRES_PORT && ./migrator;
      else
        echo 'Skipping migrations for in-memory storage';
        sleep 1;
      fi
      "

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: comments
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d comments"]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  pgdata: